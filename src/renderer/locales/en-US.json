{
	"roles": {
		"maintainer": "Maintainer",
		"reviewer": "Reviewer",
		"director": "Director",
		"contributor": "Contributor"
	},
	"common": {
		"title": "I18n Test",
		"loading": "Loading...",
		"save": "Save",
		"cancel": "Cancel",
		"submitting": "Submitting...",
		"confirm": "Confirm",
		"delete": "Delete",
		"edit": "Edit",
		"create": "Create",
		"upload": "Upload",
		"download": "Download",
		"search": "Search",
		"close": "Close",
		"open": "Open",
		"back": "Back",
		"next": "Next",
		"previous": "Previous",
		"submit": "Submit",
		"reset": "Reset",
		"refresh": "Refresh",
		"copy": "Copy",
		"paste": "Paste",
		"cut": "Cut",
		"undo": "Undo",
		"redo": "Redo",
		"help": "Help",
		"settings": "Settings",
		"about": "About",
		"version": "Version",
		"language": "Language",
		"theme": "Theme",
		"dark": "Dark",
		"light": "Light",
		"error": "An error occurred",
		"retry": "Retry",
		"noData": "No data available",
		"success": "Operation successful",
		"info": "Information",
		"warning": "Warning",
		"action": "Action",
		"add": "Add",
		"remove": "Remove",
		"actions": "Actions",
		"preview": "Preview",
		"processing": "Processing..."
	},
	"navigation": {
		"dashboard": "Dashboard",
		"projectDetail": "Project Detail",
		"reviews": "Reviews",
		"discussions": "Discussions",
		"issues": "Issues",
		"settings": "Settings"
	},
	"login": {
		"title": "Login",
		"pageTitle": "Login - DIPCP",
		"subtitle": "Serverless Project Contribution Platform",
		"whyChoose": "Why Choose DIPCP?",
		"feature1": "✅ Zero Ops Cost, Completely Serverless",
		"feature2": "✅ Zero Learning Cost, Download and Use",
		"feature3": "✅ Zero Barrier, Only GitHub Account Required",
		"feature4": "✅ Completely Transparent, Fully Traceable",
		"repositoryUrl": "Repository URL",
		"loginButton": "Login",
		"loggingIn": "Logging in...",
		"placeholders": {
			"githubUsername": "GitHub username",
			"accessToken": "GitHub Access Token (not password!)"
		},
		"howToRegister": "How to Register",
		"howToGetToken": "How to Get Token",
		"registerHelpTitle": "How to Register a GitHub Account",
		"registerHelpContent": "<h3>Step 1: Visit GitHub</h3><p>Open your browser and go to <a href='https://github.com' target='_blank'>https://github.com</a></p><br><h3>Step 2: Click Sign Up</h3><p>Click the <strong>Sign up</strong> button in the top right corner of GitHub homepage</p><br><h3>Step 3: Fill Registration Info</h3><p>• Enter username<br>• Enter email address<br>• Set password<br>• Verify you're not a robot</p><br><h3>Step 4: Verify Email</h3><p>Check your email and click the verification link sent by GitHub</p><br><h3>Step 5: Complete Registration</h3><p>After verification, you can start using your GitHub account!</p>",
		"tokenHelpTitle": "How to Get GitHub Personal Access Token",
		"tokenHelpContent": "<h3>Quick Token Access</h3><p>Go directly to: <a href='https://github.com/settings/tokens' target='_blank'><strong>https://github.com/settings/tokens</strong></a></p><br><h3>Generate Steps</h3><p>• Click <strong>Generate new token</strong> → <strong>Generate new token (classic)</strong><br>• Fill Note: DIPCP Application<br>• Select Expiration: <strong>Recommend 'Never' (no expiration)</strong><br>• <strong>Important: Check ALL permission options (select all)</strong><br>• Click <strong>Generate token</strong></p><br><h3>Copy Token</h3><p>• <strong>Copy and save the token immediately</strong> (only shown once)<br>• Paste the token into the Token field on login page</p><br><p><strong>Note:</strong> Token is only shown once, please save it carefully!</p>",
		"terms": "By logging in, you agree to our",
		"termsLink": "Terms of Service",
		"and": "and",
		"privacyLink": "Privacy Policy",
		"authorization": "First login requires authorization to access your GitHub account information",
		"loginSuccess": "Login successful",
		"loginFailed": "Login failed",
		"invalidCredentials": "Invalid username or access token",
		"repositoryNotFound": "Repository not found or inaccessible",
		"networkError": "Network connection error",
		"loading": "Verifying user information...",
		"verifying": "Verifying...",
		"legal": {
			"termsText": "By logging in, you agree to our",
			"termsLink": "Terms of Service",
			"privacyText": "and",
			"privacyLink": "Privacy Policy"
		},
		"validation": {
			"usernameRequired": "Please enter GitHub username",
			"usernameMinLength": "Username must be at least 2 characters",
			"usernameInvalidChars": "Username can only contain letters, numbers, underscores and hyphens",
			"usernameMismatch": "Username mismatch: Token belongs to \"{tokenUser}\" but you entered \"{inputUser}\"",
			"accessTokenRequired": "Please enter GitHub access token",
			"accessTokenInvalid": "Please enter a valid GitHub access token",
			"repositoryRequired": "Please enter repository URL",
			"repositoryInvalid": "Please enter a valid GitHub repository URL",
			"formInvalid": "Please fill in all required fields",
			"invalidToken": "GitHub Access Token is invalid or expired, please check your Token"
		},
		"messages": {
			"loginInProgress": "Logging in...",
			"loginSuccessRedirect": "Login successful! Redirecting...",
			"githubVerificationFailed": "GitHub account verification failed: ",
			"repositoryCloneFailed": "Repository clone failed: ",
			"connectingToGitHub": "Connecting to GitHub...",
			"validatingRepository": "Validating repository...",
			"downloadingFiles": "Downloading repository files...",
			"settingUpWorkspace": "Setting up workspace...",
			"downloadComplete": "File download completed",
			"invalidRepositoryUrl": "Invalid repository URL",
			"dataSyncComplete": "Data sync completed!",
			"dataSyncFailedButLoginSuccess": "Data sync failed, but login successful"
		},
		"settingUp": {
			"initialFiles": "Creating initial files...",
			"workflows": "Creating GitHub Actions workflows...",
			"branchProtection": "Setting up branch protection...",
			"codeOwners": "Setting up CODEOWNERS...",
			"actionsPermissions": "Setting up Actions permissions...",
			"workflowPermissions": "Setting up Workflow permissions...",
			"secrets": "Creating secrets...",
			"checkingRepository": "Checking repository type...",
			"creatingOrganization": "Creating organization...",
			"transferringRepository": "Transferring repository to organization...",
			"teamPermissions": "Setting up team permissions...",
			"creatingTeams": "Creating teams...",
			"settingTeamPermissions": "Setting up team permissions...",
			"roleFiles": "Creating role definition files...",
			"discussions": "Enabling Discussions...",
			"discussionsAlreadyEnabled": "Discussions already enabled, skipping...",
			"allSettingsComplete": "Repository settings complete, skipping initialization..."
		},
		"files": {
			"codeowners": {
				"title": "CODEOWNERS file - For protecting sensitive files and directories",
				"description": "This file defines protected files and directories. Modifications require CODEOWNERS review",
				"protectPoint": "Protect POINT directory, only reviewers can modify (for points management)",
				"protectRoles": "Protect role definition files, only owners can modify",
				"protectCodeowners": "Protect CODEOWNERS itself, prevent malicious modification",
				"protectWorkflows": "Protect Actions workflows, only owners can modify"
			},
			"pointReadme": {
				"title": "POINT Directory",
				"description": "This directory stores user contribution points data",
				"protected": "Protection Notice",
				"protectedDesc": "This directory is protected by CODEOWNERS, only reviewers can modify",
				"structure": "File Structure",
				"userFile": "`.github/POINT/username.json` - Personal points detailed records",
				"overviewFile": "`.github/POINT/points.csv` - Points overview table",
				"permissions": "Permission Description",
				"reviewer": "Reviewers: Have write permission to POINT directory for granting points",
				"maintainer": "Maintainers: Read-only permission, cannot modify points files",
				"contributor": "Contributors: Read-only permission, can view own points"
			},
			"roles": {
				"reviewers": {
					"title": "Reviewers List",
					"format": "Format: One GitHub username per line",
					"description": "Reviewers role definition file"
				},
				"maintainers": {
					"title": "Maintainers List",
					"format": "Format: One GitHub username per line",
					"description": "Maintainers role definition file"
				},
				"directors": {
					"title": "Directors List (Owners)",
					"format": "Format: One GitHub username per line",
					"description": "Directors role definition file"
				}
			}
		},
		"teams": {
			"administrators": {
				"description": "Administrators team - Has full management permissions for the repository"
			},
			"reviewers": {
				"description": "Reviewers team - Responsible for reviewing contributions and granting points through comments"
			},
			"maintainers": {
				"description": "Maintainers team - Responsible for merging PRs and managing contributions, but restricted by CODEOWNERS"
			}
		},
		"errors": {
			"personalRepo": {
				"title": "Personal Repository Not Supported",
				"message": "This application only supports organization repositories. Please use an organization repository or contact the repository administrator."
			},
			"repoCheck": {
				"title": "Repository Check Failed",
				"message": "Unable to check repository type. Please verify that the repository URL is correct."
			},
			"repoNotFound": {
				"title": "Repository Not Found",
				"message": "Repository {owner}/{repo} does not exist or is not public. Please check if the repository URL is correct."
			},
			"repoPrivate": {
				"title": "Private Repository",
				"message": "Cannot access private repository. Please ensure the repository is public or you have access permissions."
			},
			"unauthorized": {
				"title": "Authentication Failed",
				"message": "Authentication failed. Please check if your GitHub Access Token is correct."
			},
			"libsodiumNotLoaded": "libsodium library not loaded"
		}
	},
	"projectDetail": {
		"title": "Project Detail",
		"projectFiles": "Project Files",
		"localWorkspace": "Local Workspace",
		"noFiles": "No files",
		"files": "files",
		"createFile": "Create File",
		"createDirectory": "Create Directory",
		"openFile": "Open",
		"viewFile": "View",
		"deleteFile": "Delete",
		"uploadFile": "Upload File",
		"cannotView": "Cannot View",
		"cannotViewFile": "This file type cannot be viewed",
		"cannotViewDirectory": "Directory cannot be viewed",
		"checkUpdate": "Check Updates",
		"projectInfo": "Project Info",
		"details": "Details",
		"defaultDescription": "Project Description",
		"projectMembers": "Project Members",
		"recentActivity": "Recent Activity",
		"pendingReviews": "Pending Reviews",
		"creator": "Creator",
		"description": "Description",
		"contributors": "Contributors",
		"lastUpdated": "Last Updated",
		"status": "Status",
		"noMembers": "No project members",
		"membersLoadError": "Failed to load members list: {error}",
		"membersLoadHint": "Possible reasons: insufficient permissions or network connection issues",
		"refreshMembers": "Refresh",
		"viewProfile": "View Profile",
		"roleOwner": "Owner",
		"roleDirector": "Director",
		"roleMaintainer": "Maintainer",
		"roleReviewer": "Reviewer",
		"roleCollaborator": "Collaborator",
		"roleVisitor": "Visitor",
		"roleUnknown": "Unknown",
		"pendingDescription": "Here shows the list of pending content reviews.",
		"activityDescription": "Here shows the recent activities of the project, including commits, merges, etc.",
		"active": "Active",
		"inactive": "Inactive",
		"loading": "Loading...",
		"selectFileFirst": "Please select a file first",
		"fileCreated": "File created successfully",
		"fileDeleted": "File deleted successfully",
		"fileUploaded": "File uploaded successfully",
		"operationFailed": "Operation failed",
		"confirmDelete": "Are you sure you want to delete this file?",
		"enterFileName": "Please enter file name",
		"fileOperations": {
			"enterFileName": "Please enter file name (.txt will be added if no extension):",
			"defaultFileName": "new-file",
			"fileNameInvalid": "Invalid file name! Please use letters, numbers, underscores, hyphens and dots.",
			"fileExists": "File already exists!",
			"fileCreated": "File \"{fileName}\" created successfully!",
			"fileCreateFailed": "Failed to create file: {error}",
			"enterDirName": "Please enter directory name:",
			"defaultDirName": "new-directory",
			"dirNameInvalid": "Invalid directory name! Please use letters, numbers, underscores, hyphens.",
			"dirExists": "Directory already exists!",
			"dirCreated": "Directory \"{dirName}\" created successfully!",
			"dirCreateFailed": "Failed to create directory: {error}",
			"fileExistsOverwrite": "File \"{fileName}\" already exists, overwrite?",
			"fileTooLarge": "File \"{fileName}\" is too large! File size cannot exceed 40MB. Current size: {fileSize}MB",
			"unsupportedFileType": "Unsupported file type: {fileName}",
			"uploadSuccess": "Successfully uploaded {successCount} files{errorText}",
			"uploadErrorText": ", {errorCount} files failed to upload",
			"uploadFailed": "File upload failed!",
			"uploadError": "File upload failed: {error}",
			"projectUpToDate": "Project is up to date!",
			"newVersionFound": "New version found!",
			"latestCommit": "Latest commit: {message}",
			"committer": "Committer: {author}",
			"commitTime": "Time: {time}",
			"syncConfirm": "Sync immediately?",
			"checkUpdateFailed": "Check update failed: {error}",
			"checking": "Checking...",
			"syncInDevelopment": "Sync feature is under development...",
			"syncing": "Syncing project, please wait...",
			"syncSuccess": "Project synced successfully!",
			"syncFailed": "Sync failed: {error}",
			"selectFileFirst": "Please select a file to delete first!",
			"confirmDeleteFile": "Are you sure you want to delete file \"{fileName}\"?\n\nNote: Deleted files cannot be recovered!",
			"confirmDeleteDir": "Are you sure you want to delete directory \"{dirName}\"?\n\nNote: Deleted directories cannot be recovered!",
			"confirmDeleteBothFile": "Are you sure you want to delete file \"{fileName}\"?\n\nThis file exists in both local workspace and file cache.\nWill delete in two steps: first local version, then cache version.\n\nNote: Deleted files cannot be recovered!",
			"confirmDeleteBothDir": "Are you sure you want to delete directory \"{dirName}\"?\n\nThis directory exists in both local workspace and file cache.\nWill delete in two steps: first local version, then cache version.\n\nNote: Deleted directories cannot be recovered!",
			"deleteSuccess": "File \"{fileName}\" deleted successfully.",
			"deleteLocalSuccess": "Local edited version deleted, file \"{fileName}\" remains in directory.",
			"deleteCacheSuccess": "File \"{fileName}\" deleted from cache.",
			"deleteBothSuccess": "File \"{fileName}\" has been completely deleted from both local workspace and file cache.",
			"fileDeleted": "File \"{fileName}\" deleted successfully!",
			"dirDeleted": "Directory \"{dirName}\" deleted successfully!",
			"deleteFailed": "Delete failed: {error}",
			"modalTitles": {
				"createFile": "Create File",
				"createDir": "Create Directory",
				"confirmDelete": "Confirm Delete",
				"confirmOverwrite": "Confirm Overwrite",
				"confirmSync": "Confirm Sync",
				"fileTooLarge": "File Too Large",
				"unsupportedFile": "Unsupported File Type",
				"updateAvailable": "Update Available",
				"alreadyLatest": "Project Up to Date",
				"syncSuccess": "Sync Success",
				"syncFailed": "Sync Failed",
				"uploadSuccess": "Upload Success",
				"uploadFailed": "Upload Failed",
				"error": "Error",
				"success": "Success",
				"warning": "Warning",
				"info": "Information"
			}
		},
		"enterDirectoryName": "Please enter directory name",
		"errors": {
			"userConfigMissing": "User configuration or repository information missing",
			"invalidRepositoryUrl": "Invalid repository URL",
			"loadProjectDataFailed": "Failed to load project data",
			"renderFileListFailed": "Failed to render file list",
			"loadFileListFailed": "Failed to load file list",
			"openFileFailed": "Failed to open file",
			"createFileFailed": "Failed to create file",
			"createDirectoryFailed": "Failed to create directory",
			"deleteFailed": "Delete failed",
			"uploadFileFailed": "Failed to upload file",
			"checkDirectoryFilesFailed": "Failed to check directory files",
			"userNotLoggedIn": "User not logged in",
			"repositoryInfoUnavailable": "Repository information or access token unavailable",
			"cannotParseProjectUrl": "Cannot parse project URL",
			"userNotLoggedInOrTokenUnavailable": "User not logged in or access token unavailable",
			"cannotGetLatestCommit": "Cannot get latest commit information"
		},
		"ui": {
			"unknownProject": "Unknown Project",
			"noDescription": "No description",
			"localWorkspace": "Local Workspace",
			"projectInfo": "Project Info",
			"repository": "Repository",
			"unknown": "Unknown",
			"repositoryUrl": "Repository URL:",
			"createTime": "Create Time:",
			"programmingLanguage": "Programming Language:",
			"openSourceLicense": "Open Source License:",
			"status": "Status:",
			"noPendingReviews": "No pending reviews",
			"loading": "Loading...",
			"retry": "Retry loading",
			"newFileContent": "This is a new file.",
			"ifFileShowOpen": "If it's a file, show [Open] button",
			"ifDirectoryShowDelete": "If it's a directory, only show [Delete] button",
			"noFileSelectedHideButtons": "Hide all buttons when no file is selected",
			"saveFileInfoToLocalStorage": "Save current file info to localStorage for editor page",
			"navigateToEditor": "Navigate to editor page"
		},
		"time": {
			"justNow": "Just now",
			"minutesAgo": "minutes ago",
			"hoursAgo": "hours ago",
			"daysAgo": "days ago"
		},
		"validation": {
			"fileNameEmpty": "File name cannot be empty",
			"fileNameContainsSeparator": "File name cannot contain path separators",
			"fileNameTooLong": "File name too long",
			"directoryNameEndsWithSlash": "Directory name cannot end with slash"
		},
		"confirmations": {
			"deleteFile": "Are you sure you want to delete {path}?"
		},
		"prompts": {
			"enterFileName": "Please enter file name:",
			"enterDirectoryName": "Please enter directory name:"
		},
		"messages": {
			"checkingUpdates": "Checking for updates...",
			"noUpdatesAvailable": "Already up to date",
			"checkUpdateFailed": "Check updates failed",
			"updateAvailable": "New version available!\n\nLatest commit: {commitMessage}\nCommit date: {commitDate}\nLast sync: {lastSyncDate}",
			"confirmSync": "Do you want to sync the latest version?",
			"syncing": "Syncing...",
			"syncComplete": "Sync completed",
			"syncFailed": "Sync failed"
		}
	},
	"editor": {
		"title": "Editor",
		"fileInfo": "File Info",
		"editHistory": "Edit History",
		"collaboration": "Collaboration",
		"save": "💾 Save",
		"preview": "👁 Preview",
		"edit": "✏️ Edit",
		"history": "📜 History",
		"collaborate": "👥 Collaborate",
		"submitReview": "📤 Submit Review",
		"lastModified": "Last Modified",
		"modifier": "Modifier",
		"loading": "Loading...",
		"noContent": "No content",
		"fileSaved": "File saved successfully",
		"saveFailed": "Save failed",
		"submitSuccess": "Review submitted successfully",
		"submitFailed": "Failed to submit review",
		"submitting": "Submitting...",
		"commitMessage": "Update file via DIPCP: ",
		"submitNotImplemented": "Submit review feature not implemented",
		"saveNotImplemented": "Save file feature not implemented",
		"image": {
			"fileName": "File Name",
			"filePath": "Path",
			"mode": "Mode",
			"viewOnly": "View Only"
		},
		"unsavedChanges": "You have unsaved changes",
		"confirmLeave": "Are you sure you want to leave? Unsaved changes will be lost",
		"infoPanel": {
			"fileName": "File Name",
			"filePath": "File Path",
			"fileSize": "File Size",
			"lastModified": "Last Modified",
			"characters": "characters",
			"createFile": "Create File",
			"editContent": "Edit Content",
			"online": "Online",
			"offline": "Offline",
			"otherUsers": "Other Users"
		},
		"errors": {
			"cannotGetFilePath": "Cannot get file path",
			"fileNotFound": "File not found",
			"loadFileFailed": "Failed to load file",
			"userConfigMissing": "User configuration or repository information missing",
			"invalidRepositoryInfo": "Invalid repository information",
			"fetchFromGitHubFailed": "Failed to fetch file from GitHub",
			"loadEditHistoryFailed": "Failed to load edit history",
			"autoSaveSuccess": "Auto save successful",
			"autoSaveFailed": "Auto save failed",
			"saveSuccess": "Save successful",
			"saveFailed": "Save failed",
			"submitFailed": "Submit failed",
			"fileModifiedConfirm": "File has been modified, save before submitting?",
			"submitReviewInDevelopment": "Submit review feature is under development...",
			"unsavedChangesConfirm": "You have unsaved changes, are you sure you want to leave?",
			"unsavedChangesSaveConfirm": "You have unsaved changes, do you want to save?",
			"userNotLoggedInOrTokenUnavailable": "User not logged in or access token unavailable",
			"repositoryInfoUnavailable": "Repository information unavailable",
			"filePathMissing": "File path missing"
		},
		"ui": {
			"startWriting": "Start writing content...",
			"loading": "Loading...",
			"error": "Error",
			"saveWithAsterisk": "Save*",
			"save": "Save",
			"project": "Project",
			"unknown": "Unknown",
			"modifier": "Modifier:",
			"modified": "Modified",
			"saved": "Saved",
			"justNow": "Just now",
			"minutesAgo": "minutes ago",
			"hoursAgo": "hours ago",
			"daysAgo": "days ago",
			"navigateTo": "Navigate to:",
			"text": "Text:",
			"fileInfo": "File Info",
			"editHistory": "Edit History",
			"collaboration": "Collaboration",
			"info": "Info",
			"loadEditHistoryFailed": "Failed to load edit history"
		},
		"time": {
			"unknown": "Unknown",
			"justNow": "Just now",
			"minutesAgo": "minutes ago",
			"hoursAgo": "hours ago",
			"daysAgo": "days ago"
		},
		"findReplace": {
			"find": "Find:",
			"replaceWith": "Replace with:",
			"replacedCount": "Replaced {count} occurrences",
			"noMatchFound": "No matching text found"
		},
		"gotoLine": {
			"invalidLineNumber": "Invalid line number"
		}
	},
	"reviews": {
		"title": "Reviews Page",
		"subtitle": "Manage and review user submissions",
		"pendingReviews": "Pending Reviews",
		"reviewed": "Reviewed",
		"approved": "Approved",
		"rejected": "Rejected",
		"totalReviews": "Total Reviews",
		"reviewList": "Review List",
		"submitter": "Submitter",
		"submitTime": "Submit Time",
		"reviewer": "Reviewer",
		"reviewTime": "Review Time",
		"reviewComment": "Review Comment",
		"approve": "Approve",
		"reject": "Reject",
		"viewDetails": "View Details",
		"reviewSuccess": "Review completed",
		"reviewFailed": "Review failed",
		"noReviews": "No reviews available",
		"notImplemented": {
			"approve": "Approve functionality not implemented",
			"reject": "Reject functionality not implemented",
			"comment": "Add comment functionality not implemented"
		}
	},
	"settings": {
		"title": "Settings",
		"language": "Language Settings",
		"account": "Account Settings",
		"notifications": "Notification Settings",
		"emailNotifications": "Email Notifications",
		"systemNotifications": "System Notifications",
		"about": "About",
		"selectLanguage": "Select Language",
		"selectTheme": "Select Theme",
		"followSystem": "Follow System",
		"chinese": "中文",
		"english": "English",
		"japanese": "日本語",
		"settingsSaved": "Settings saved",
		"settingsFailed": "Failed to save settings",
		"sync": "Sync Settings",
		"syncInterval": "Sync interval (seconds)",
		"min": "Min",
		"max": "Max",
		"theme": {
			"title": "Theme Settings",
			"lightDesc": "Suitable for daytime use",
			"darkDesc": "Suitable for nighttime use"
		},
		"logoutUser": {
			"button": "Logout User",
			"confirmTitle": "Confirm Logout User",
			"warningTitle": "Important Notice",
			"warningMessage": "After logging out, user-related data will be permanently deleted, including:",
			"warningItem1": "• User login information",
			"warningItem2": "• Saved login credentials",
			"warningItem3": "• Repository access history",
			"warningItem4": "• All local workspace data",
			"note": "Note: Personal settings (language, theme, etc.) will be preserved",
			"warningNote": "This action cannot be undone, please proceed with caution!"
		}
	},
	"theme": {
		"dark": "Dark Theme",
		"light": "Light Theme",
		"darkMode": "Dark Mode",
		"lightMode": "Light Mode"
	},
	"dashboard": {
		"title": "Dashboard",
		"welcome": "Welcome to DIPCP!",
		"subtitle": "Serverless Project Contribution Platform",
		"exitProject": "Exit Project",
		"totalPoints": "Total Points",
		"myContributions": "My Contributions",
		"pendingReviews": "Pending Reviews",
		"approvedContributions": "Approved",
		"quickActions": "Quick Actions",
		"newContribution": "New Contribution",
		"viewProjectDetail": "Project Detail",
		"viewReviews": "View Reviews",
		"settings": "Settings",
		"recentActivity": "Recent Activity",
		"activity1": "You submitted a new document: DIPCP Technical Design Document v1.1",
		"activity2": "Your contribution 'Fix login page' has been merged, earned 10 points",
		"activity3": "Reviewer 'reviewer-1' commented on your contribution 'Optimize theme switching'",
		"time1": "2 hours ago",
		"time2": "1 day ago",
		"time3": "2 days ago",
		"noProjects": "No projects available",
		"noActivity": "No recent activity",
		"application": {
			"title": "Become a Contributor",
			"description": "Apply to become a project contributor and participate in code development and project maintenance.",
			"applyButton": "Apply to Contribute",
			"pendingTitle": "Application Submitted",
			"pendingMessage": "Your contributor application is under review, please wait patiently.",
			"checkStatusButton": "Check Review Status",
			"modalTitle": "Apply to Become a Contributor",
			"reasonLabel": "Application Reason (Optional)",
			"reasonPlaceholder": "Please briefly explain why you want to participate in the project and your plans...",
			"submitButton": "Submit Application",
			"submitting": "Submitting...",
			"submitSuccess": "Application submitted successfully! Please wait for review.",
			"error": "Failed to submit application:",
			"reviewing": {
				"title": "Under Review",
				"message": "Your application is being processed, it will take about 1 minute...",
				"details": "Issue #{issueNumber} created<br>GitHub Actions is automatically processing your application",
				"processing": "Processing your application, please wait...",
				"workflowRunning": "GitHub Actions workflow is running...",
				"acceptingInvitation": "Accepting collaborator invitation...",
				"finalizing": "Finalizing setup..."
			}
		},
		"userRole": {
			"title": "User Role",
			"owner": "Owner",
			"director": "Director",
			"maintainer": "Maintainer",
			"reviewer": "Reviewer",
			"collaborator": "Collaborator",
			"visitor": "Visitor"
		},
		"logout": {
			"confirmTitle": "Confirm Exit Project",
			"warningTitle": "Important Notice",
			"warningMessage": "After exiting, all uncommitted local data will be permanently deleted, including:",
			"warningItem1": "• Locally edited file contents",
			"warningItem2": "• New files that haven't been committed",
			"warningItem3": "• All modifications in local workspace",
			"warningItem4": "• User access token and cache data",
			"warningNote": "Please ensure you have saved all important changes before exiting!",
			"confirmButton": "Confirm Exit"
		},
		"errors": {
			"invalidRepositoryUrl": "Invalid repository URL"
		}
	},
	"github": {
		"auth": {
			"title": "GitHub Authentication",
			"message": "Please enter your GitHub Personal Access Token for authentication:",
			"instructions": "How to get it:<br>1. Visit <a href=\"https://github.com/settings/tokens\" target=\"_blank\">https://github.com/settings/tokens</a><br>2. Click \"Generate new token (classic)\"<br>3. Select \"public_repo\" permission<br>4. Copy the generated token",
			"placeholder": "ghp_xxxxxxxxxxxxxxxxxxxx"
		}
	},
	"notifications": {
		"success": "Success",
		"error": "Error",
		"warning": "Warning",
		"info": "Info",
		"operationSuccess": "Operation successful",
		"operationFailed": "Operation failed",
		"networkError": "Network error",
		"fileNotFound": "File not found",
		"permissionDenied": "Permission denied",
		"invalidInput": "Invalid input",
		"saveSuccess": "Save successful",
		"saveFailed": "Save failed",
		"deleteSuccess": "Delete successful",
		"deleteFailed": "Delete failed"
	},
	"activityList": {
		"noActivities": "No activity records"
	},
	"time": {
		"justNow": "Just now",
		"minutesAgo": "{minutes} minutes ago",
		"hoursAgo": "{hours} hours ago",
		"daysAgo": "{days} days ago"
	},
	"collaboration": {
		"currentStatus": "Current Status:",
		"localWorkspace": "Local Workspace:",
		"modified": "Modified",
		"saved": "Saved",
		"hasUncommittedChanges": "Has uncommitted changes",
		"workspaceClean": "Workspace clean"
	},
	"fileInfo": {
		"fileName": "File Name:",
		"fileType": "File Type:",
		"fileSize": "File Size:",
		"lastModified": "Last Modified:",
		"unknown": "Unknown"
	},
	"statusBar": {
		"line": "Line {current}/{total}",
		"size": "Size {size}",
		"status": "Status {status}"
	},
	"editHistory": {
		"noHistory": "No edit history"
	},
	"member": {
		"contributions": "{count} contributions"
	},
	"members": {
		"noMembers": "No member information"
	},
	"terms": {
		"title": "Terms of Service",
		"subtitle": "DIPCP (Serverless Project Contribution Platform) Usage Agreement",
		"lastUpdated": "Last Updated: October 22, 2025",
		"importantNoticeTitle": "Important Notice:",
		"importantNoticeContent": "DIPCP is a completely transparent serverless collaboration platform. All data is publicly stored in GitHub repositories. Please read this usage agreement carefully.",
		"transparencyPrincipleTitle": "Transparency Principle:",
		"transparencyPrincipleContent": "DIPCP follows a completely transparent design principle. All participants, participation processes, and benefits are publicly disclosed in plain text and fully traceable.",
		"section1": {
			"title": "1. Platform Overview",
			"content1": "DIPCP (Serverless Project Contribution Platform) is a GitHub-based collaboration platform specifically designed for decentralized world building, content creation, and collaborative projects. The platform adopts a completely transparent design philosophy with all data publicly stored.",
			"content2": "Important Note: DIPCP itself does not provide any services. All services are provided by GitHub. We only provide a client application to help users better utilize GitHub's collaboration features."
		},
		"section2": {
			"title": "2. Applicable Scenarios",
			"subtitle1": "2.1 Suitable Project Types",
			"content1": "Open source software development: code, documentation, design, and other public content",
			"content2": "Knowledge sharing projects: tutorials, guides, encyclopedias, and other educational content",
			"content3": "Creative collaboration projects: art, literature, music, and other creative content",
			"content4": "Community building projects: event planning, community rules, and other public information",
			"content5": "Academic research projects: papers, research data, and other academic content",
			"content6": "World building projects: game settings, novel worldviews, and other creative content",
			"subtitle2": "2.2 Unsuitable Project Types",
			"warningTitle": "Important Reminder:",
			"warningContent": "The following types of projects are not suitable for DIPCP:",
			"warning1": "Commercial confidential projects: internal projects involving commercial secrets",
			"warning2": "Personal privacy content: sensitive information involving personal privacy",
			"warning3": "Confidential projects: projects requiring confidentiality agreements",
			"warning4": "Internal management systems: enterprise internal management systems",
			"warning5": "Medical health projects: projects involving personal health information",
			"warning6": "Financial service projects: projects involving financial privacy"
		},
		"section3": {
			"title": "3. Platform Features",
			"content1": "The DIPCP client application provides the following features:",
			"feature1": "GitHub-based version control and collaboration features",
			"feature2": "File editing and management tools (supporting Markdown, text, images, etc.)",
			"feature3": "Automatic branch management and submission review processes",
			"feature4": "Point reward and contribution evaluation system",
			"feature5": "Multi-platform support (desktop app, mobile app, web version)",
			"feature6": "Zero-barrier participation design (no need to learn Git technology)",
			"feature7": "Completely transparent data storage and operation records"
		},
		"section4": {
			"title": "4. User Responsibilities",
			"subtitle1": "4.1 GitHub Account Security",
			"content1": "Users are responsible for:",
			"responsibility1": "Protecting the security of their GitHub account",
			"responsibility2": "Not sharing account information with others",
			"responsibility3": "Promptly reporting any security vulnerabilities or unauthorized use",
			"responsibility4": "Complying with GitHub's terms of service",
			"subtitle2": "4.2 Content Responsibility",
			"content2": "Users are responsible for all content they create, edit, or submit, including:",
			"contentResponsibility1": "Ensuring content does not infringe on others' intellectual property",
			"contentResponsibility2": "Ensuring content complies with relevant laws and regulations",
			"contentResponsibility3": "Not publishing illegal, harmful, threatening, defamatory, harassing, or inappropriate content",
			"contentResponsibility4": "Understanding and agreeing that all content will be publicly stored and completely transparent",
			"subtitle3": "4.3 Transparency Responsibility",
			"content3": "Users understand and agree that:",
			"transparencyResponsibility1": "All operation records will be publicly stored",
			"transparencyResponsibility2": "Personal contribution history is completely transparent",
			"transparencyResponsibility3": "Point changes and reward records are publicly visible",
			"transparencyResponsibility4": "Application and review processes are completely transparent"
		},
		"section5": {
			"title": "5. Usage Restrictions",
			"content1": "Users must not:",
			"restriction1": "Abuse or maliciously use the platform",
			"restriction2": "Attempt to damage or interfere with normal platform operation",
			"restriction3": "Use automated tools for inappropriate operations",
			"restriction4": "Violate GitHub's terms of service",
			"restriction5": "Upload content involving privacy or confidentiality",
			"restriction6": "Engage in any behavior that may harm platform transparency"
		},
		"section6": {
			"title": "6. Intellectual Property",
			"content1": "Users retain all intellectual property rights to their created content. By using the DIPCP platform, users grant us necessary licenses to provide and improve platform functionality. All content will be managed according to open source agreements."
		},
		"section7": {
			"title": "7. Data Storage and Transparency",
			"subtitle1": "7.1 Data Storage Methods",
			"content1": "All data is stored in plain text in GitHub repositories, including:",
			"dataType1": "User information and permission data",
			"dataType2": "Project configuration and settings",
			"dataType3": "Contribution records and review history",
			"dataType4": "Point changes and reward records",
			"dataType5": "Operation logs and audit trails",
			"subtitle2": "7.2 Transparency Guarantee",
			"content2": "We guarantee:",
			"guarantee1": "All data is completely public and viewable by anyone",
			"guarantee2": "Every operation has complete records and audit trails",
			"guarantee3": "All decision-making processes are completely transparent",
			"guarantee4": "The point system is completely public and transparent"
		},
		"section8": {
			"title": "8. Service Dependencies",
			"content1": "The DIPCP platform depends on the following third-party services:",
			"dependency1": "GitHub services: all data storage, version control, and collaboration features are provided by GitHub",
			"dependency2": "Network connection: requires stable network connection to access GitHub",
			"dependency3": "Browser support: web version requires modern browser support",
			"disclaimer": "Disclaimer: We are not responsible for the availability, performance, or data loss of third-party services."
		},
		"section9": {
			"title": "9. Platform Availability",
			"content1": "We strive to maintain the availability of the DIPCP client application, but do not guarantee that the application will not experience failures. The application may be temporarily unavailable due to the following reasons:",
			"reason1": "Application updates and maintenance",
			"reason2": "Technical failures or errors",
			"reason3": "Unavailability of dependent third-party services",
			"reason4": "Network connection issues"
		},
		"section10": {
			"title": "10. Disclaimer",
			"disclaimerTitle": "Disclaimer:",
			"disclaimerContent": "The DIPCP client application is provided 'as is' without any express or implied warranties. We are not liable for any direct or indirect losses arising from the use of this application. Since data is completely publicly stored, users should assess privacy risks themselves."
		},
		"section11": {
			"title": "11. Platform Changes",
			"content1": "We reserve the right to modify, suspend, or terminate the DIPCP client application at any time. Major changes will be notified to users in advance. All change records will be publicly stored to ensure transparency."
		},
		"section12": {
			"title": "12. Dispute Resolution",
			"content1": "Disputes arising from the use of the DIPCP platform should be resolved through friendly consultation. If consultation fails, disputes may be brought to a court of competent jurisdiction. All dispute resolution processes will remain transparent."
		},
		"section13": {
			"title": "13. Terms Modification",
			"content1": "We reserve the right to modify this usage agreement at any time. Modified agreements will be published on the platform, and continued use of the platform indicates acceptance of the modified agreement. All modification history will be publicly recorded."
		},
		"section14": {
			"title": "14. Contact Information",
			"content1": "If you have any questions about this usage agreement, please contact us through the following methods:",
			"contact1": "GitHub Issues: https://github.com/your-org/spcp/issues",
			"contact2": "Project Repository: https://github.com/your-org/spcp",
			"contact3": "Email: support@spcp.example.com",
			"noteTitle": "Note:",
			"noteContent": "All communication records will be publicly stored to ensure transparency."
		},
		"footer": {
			"copyright": "© 2025 DIPCP Platform. All rights reserved.",
			"backLink": "Back to Login Page"
		}
	},
	"privacy": {
		"title": "Privacy Policy",
		"subtitle": "DIPCP (Serverless Project Contribution Platform) Privacy Protection Statement",
		"lastUpdated": "Last Updated: October 22, 2025",
		"importantNoticeTitle": "Important Notice:",
		"importantNoticeContent": "DIPCP is a completely transparent serverless collaboration platform. This privacy policy explains how we handle your information and your privacy rights when using the platform.",
		"transparencyPrincipleTitle": "Transparency Principle:",
		"transparencyPrincipleContent": "DIPCP follows a completely transparent design principle. All data is publicly stored in GitHub repositories, which means your information will be visible to everyone.",
		"section1": {
			"title": "1. Information Processing",
			"subtitle1": "1.1 We Do Not Collect Information",
			"content1": "DIPCP is a pure client application. We do not collect, store, or process any of your personal information. All data is processed locally on your device.",
			"subtitle2": "1.2 Local Data Processing",
			"content2": "The application only processes the following data on your device:",
			"dataType1": "Local cache: editing content, setting preferences, and other temporary data",
			"dataType2": "GitHub data: public information obtained through GitHub API (not stored)",
			"dataType3": "User operations: editing, saving, and other operation records (local only)",
			"importantNoteTitle": "Important Note:",
			"importantNoteContent": "The DIPCP client does not send your personal information to any server. All data interacts directly with GitHub services through the GitHub API."
		},
		"section2": {
			"title": "2. Data Flow",
			"subtitle1": "2.1 Data Flow Description",
			"content1": "The data flow of the DIPCP client application is as follows:",
			"flow1": "User → Local Device: editing content, setting preferences, and other data stored on your device",
			"flow2": "Local Device → GitHub: direct interaction with GitHub services through GitHub API",
			"flow3": "GitHub → Local Device: obtaining project data, user information, and other public information",
			"flow4": "Us: we do not receive, store, or process any user data",
			"subtitle2": "2.2 Transparency Guarantee",
			"importantNoteTitle": "Important Note:",
			"importantNoteContent": "Due to DIPCP's transparent design principle, the following information will be publicly stored:",
			"publicInfo1": "Your contribution records and operation history",
			"publicInfo2": "Point changes and reward records",
			"publicInfo3": "Application and review process records",
			"publicInfo4": "Project participation and collaboration records",
			"noteContent": "This information will be stored in plain text in GitHub repositories and can be viewed by anyone."
		},
		"section3": {
			"title": "3. Data Storage",
			"subtitle1": "3.1 Storage Locations",
			"content1": "Data is stored in the following locations:",
			"location1": "GitHub repositories: all project-related data, user information, operation records (managed by GitHub)",
			"location2": "Your local device: temporary cache, setting preferences, editing drafts (controlled by you)",
			"location3": "Our servers: none (we do not run any servers)",
			"subtitle2": "3.2 Storage Control",
			"control1": "GitHub data: managed by GitHub's privacy policy and terms of service",
			"control2": "Local data: completely controlled by you, can be deleted at any time",
			"control3": "Us: we do not store any user data"
		},
		"section4": {
			"title": "4. Data Sharing",
			"subtitle1": "4.1 We Do Not Share Your Data",
			"content1": "The DIPCP client application does not share your data with any third parties because we do not collect, store, or process any user data.",
			"subtitle2": "4.2 Data Disclosure Statement",
			"warningTitle": "Important Reminder:",
			"warningContent": "Due to DIPCP's transparent design, the following information will be publicly stored:",
			"publicData1": "All project content and collaboration records (stored in GitHub repositories)",
			"publicData2": "User contribution history and point records (stored in GitHub repositories)",
			"publicData3": "Review processes and decision records (stored in GitHub repositories)",
			"noteContent": "This data is managed by GitHub and subject to GitHub's privacy policy."
		},
		"section5": {
			"title": "5. Data Security",
			"subtitle1": "5.1 Client Security",
			"content1": "Security measures of the DIPCP client application:",
			"security1": "Using HTTPS encryption to communicate with GitHub API",
			"security2": "Local data stored on your device, controlled by you",
			"security3": "Regular application security patch updates",
			"security4": "Not sending sensitive information to any server",
			"subtitle2": "5.2 Data Security Statement",
			"warningTitle": "Important Reminder:",
			"warningContent": "Due to transparent design principles, the following security limitations need attention:",
			"limitation1": "Data in GitHub repositories is stored in plain text without encryption protection",
			"limitation2": "Anyone can access and view public data",
			"limitation3": "Complete data confidentiality cannot be guaranteed",
			"limitation4": "It is recommended not to upload sensitive or confidential information"
		},
		"section6": {
			"title": "6. Your Rights",
			"subtitle1": "6.1 Right to Access",
			"content1": "You have the right to:",
			"right1": "View your personal information and contribution records",
			"right2": "Understand how data is used and stored",
			"right3": "Obtain data copies and export functionality",
			"subtitle2": "6.2 Right to Control",
			"content2": "You can:",
			"control1": "Control account information through GitHub settings",
			"control2": "Delete local cache and temporary data",
			"control3": "Choose not to participate in certain features",
			"control4": "Contact us to handle data-related issues",
			"subtitle3": "6.3 Limitation Statement",
			"warningTitle": "Important Note:",
			"warningContent": "Due to transparent design principles, the following rights are limited:",
			"limitation1": "Cannot delete already public contribution records",
			"limitation2": "Cannot hide operation history and point records",
			"limitation3": "Cannot withdraw already public data",
			"limitation4": "All changes will be recorded and made public"
		},
		"section7": {
			"title": "7. Children's Privacy",
			"content1": "DIPCP is not specifically designed for children under 13. If you are a child under 13, please use this platform under the guidance of parents or guardians."
		},
		"section8": {
			"title": "8. International Transfer",
			"content1": "Your information may be transferred to other countries through GitHub services. We rely on GitHub's data protection measures to protect your information."
		},
		"section9": {
			"title": "9. Privacy Policy Changes",
			"content1": "We may update this privacy policy from time to time. Major changes will be notified through the following methods:",
			"notification1": "Publishing notifications on the platform",
			"notification2": "Updating this page",
			"notification3": "Publishing announcements through GitHub Issues"
		},
		"section10": {
			"title": "10. Contact Us",
			"content1": "If you have any questions or suggestions about this privacy policy, please contact us through the following methods:",
			"contact1": "GitHub Issues: https://github.com/your-org/spcp/issues",
			"contact2": "Project Repository: https://github.com/your-org/spcp",
			"contact3": "Email: privacy@spcp.example.com"
		},
		"section11": {
			"title": "11. Applicable Law",
			"content1": "This privacy policy is governed by the laws of the People's Republic of China. If you are in the European Union, this policy also complies with GDPR regulations."
		},
		"footer": {
			"copyright": "© 2025 DIPCP Platform. All rights reserved.",
			"backLink": "Back to Login Page"
		}
	},
	"userProfile": {
		"loadError": "Load Failed",
		"retry": "Retry",
		"repositories": "Repositories",
		"followers": "Followers",
		"following": "Following",
		"contributionStats": "Contribution Statistics",
		"totalContributions": "Total Contributions",
		"contributionStreak": "Contribution Streak",
		"days": "days",
		"starsReceived": "Stars Received",
		"forksReceived": "Forks Received",
		"recentActivity": "Recent Activity",
		"noRecentActivity": "No Recent Activity",
		"inviteMaintainer": "Invite as Maintainer",
		"inviteReviewer": "Invite as Reviewer",
		"inviteDirector": "Invite as Director",
		"inviteSent": "Invitation sent",
		"errors": {
			"notLoggedIn": "Please log in first",
			"noRepository": "Repository information not configured",
			"inviteFailed": "Failed to send invitation: {error}",
			"userNotLoggedInOrTokenUnavailable": "User not logged in or access token unavailable"
		}
	},
	"roleManagement": {
		"title": "Project Permission Settings",
		"status": {
			"saved": "Saved",
			"unsaved": "Unsaved",
			"error": "Error",
			"loading": "Loading"
		},
		"branchProtection": {
			"title": "Branch Protection Rules",
			"branchName": "Branch Name",
			"addBranch": "Add Branch",
			"protectionRules": "Protection Rules",
			"requirePR": "Require pull request reviews before merging",
			"requireCodeOwners": "Require review from code owners",
			"dismissStaleReviews": "Dismiss stale reviews when new commits are pushed",
			"requireStatusChecks": "Require status checks to pass before merging",
			"requireUpToDate": "Require branches to be up to date before merging",
			"restrictPushes": "Restrict pushes that create files",
			"advancedSettings": "Advanced Settings",
			"requiredReviewers": "Required number of reviewers",
			"requiredCodeOwners": "Required code owners",
			"requiredStatusChecks": "Required status checks",
			"addStatusCheck": "Add Status Check"
		},
		"codeOwners": {
			"title": "Code Owners Configuration (CODEOWNERS)",
			"globalOwners": "Global Owners",
			"specificRules": "Specific File/Directory Rules",
			"pathPattern": "Path Pattern",
			"owners": "Owners",
			"addRule": "Add Rule",
			"previewFile": "Preview CODEOWNERS File"
		},
		"teamPermissions": {
			"title": "Team Permission Assignment",
			"teamName": "Team Name",
			"permissionLevel": "Permission Level",
			"addTeam": "Add Team",
			"noTeams": "No teams available",
			"read": "Read",
			"triage": "Triage",
			"write": "Write",
			"maintain": "Maintain",
			"admin": "Admin"
		},
		"modals": {
			"addTeam": {
				"title": "Add Team Permission",
				"selectTeam": "Select Team",
				"permissionLevel": "Permission Level",
				"devTeam": "Developer Team",
				"techLeadTeam": "Tech Lead Team",
				"maintainerTeam": "Maintainer Team",
				"read": "Read",
				"triage": "Triage",
				"write": "Write",
				"maintain": "Maintain",
				"admin": "Admin",
				"permissionDescription": "Permission Description",
				"writeDesc": "Can push code, create branches, manage Issues and PRs",
				"maintainDesc": "Can manage repository, but cannot modify sensitive settings",
				"adminDesc": "Has full administrative permissions, can modify repository settings",
				"readDesc": "Can only view code, cannot modify",
				"triageDesc": "Can manage Issues and PRs, but cannot push code",
				"addTeam": "Add Team"
			},
			"preview": {
				"title": "Permission Settings Preview",
				"branchProtection": "Branch Protection Rules",
				"branchProtected": "branch protection enabled",
				"requirePR": "Require PR review before merging",
				"requireCodeOwners": "Require code owner review",
				"codeOwners": "Code Owners",
				"globalOwners": "Global Owners",
				"specificRules": "Specific File Rules",
				"rules": "rules",
				"teamPermissions": "Team Permissions",
				"permission": "permission",
				"backToEdit": "Back to Edit"
			}
		},
		"errors": {
			"teamExists": "This team already exists",
			"selectTeam": "Please select a team",
			"addTeamFailed": "Failed to add team: {error}",
			"removeTeamFailed": "Failed to remove team: {error}",
			"updatePermissionFailed": "Failed to update permission: {error}",
			"githubTokenNotFound": "GitHub token not found"
		},
		"confirm": {
			"removeTeam": "Are you sure you want to remove this team?",
			"reset": "Are you sure you want to reset all settings? This will lose all unsaved changes."
		},
		"messages": {
			"saveSuccess": "Settings saved successfully",
			"saveError": "Save failed: {error}"
		}
	},
	"discussions": {
		"title": "Discussions",
		"searchPlaceholder": "Search discussions...",
		"newDiscussion": "New Discussion",
		"sort": {
			"latest": "Latest",
			"hottest": "Hottest",
			"replies": "Most Replies"
		},
		"category": {
			"general": "General Discussion",
			"ideas": "Ideas and Suggestions",
			"polls": "Polls",
			"qna": "Q&A",
			"showAndTell": "Show and tell",
			"announcements": "Announcements"
		},
		"noDiscussions": "No discussions in this category",
		"empty": "No discussions",
		"selectDiscussion": "Please select a discussion to view details",
		"backToList": "Back to Discussions",
		"edit": "Edit",
		"delete": "Delete",
		"replies": "Replies",
		"addReply": "Add a reply...",
		"submitReply": "Submit Reply",
		"scrollToTop": "Scroll to Top",
		"noReplies": "No replies yet",
		"like": "Like",
		"createNew": "Create New Discussion",
		"categoryLabel": "Category",
		"titleLabel": "Title",
		"titlePlaceholder": "Enter discussion title...",
		"contentLabel": "Content",
		"contentPlaceholder": "Enter discussion content (Markdown supported)...",
		"replyEmpty": "Reply content cannot be empty",
		"replySubmitted": "Reply submitted",
		"replyFailed": "Failed to submit reply",
		"titleRequired": "Title cannot be empty",
		"contentRequired": "Content cannot be empty",
		"created": "Discussion created",
		"createFailed": "Failed to create discussion",
		"featureNotImplemented": "This feature is not implemented yet",
		"confirmDeleteComment": "Are you sure you want to delete this comment?",
		"close": "Close Discussion",
		"closed": "Closed",
		"confirmClose": "Are you sure you want to close this discussion?",
		"closeFailed": "Failed to close discussion",
		"timeAgo": {
			"justNow": "Just now",
			"minutes": "{minutes} minutes ago",
			"hours": "{hours} hours ago",
			"days": "{days} days ago",
			"weeks": "{weeks} weeks ago",
			"months": "{months} months ago"
		},
		"invitation": {
			"title": "Role Invitation",
			"description": "You have received a role invitation. Please choose to accept or reject it",
			"accept": "Accept Invitation",
			"reject": "Reject Invitation",
			"accepted": "Invitation accepted! GitHub Actions will automatically process your request.",
			"rejected": "Invitation rejected.",
			"acceptFailed": "Failed to accept invitation: {error}",
			"rejectFailed": "Failed to reject invitation: {error}"
		}
	},
	"issues": {
		"title": "Issues",
		"newIssue": "+ New Issue",
		"searchPlaceholder": "🔍 Search or jump to...",
		"filters": "Filters▼",
		"labels": "Labels▼",
		"sort": "Sort▼",
		"open": "Open",
		"opened": "opened",
		"closed": "closed",
		"close": "Closed",
		"by": "by",
		"comments": "comments",
		"noIssues": "No Issues",
		"backToList": "Back to Issues",
		"writeComment": "💬 Write a comment...",
		"format": "🎨 Format",
		"attachFiles": "📎 Attach files",
		"comment": "💬 Comment",
		"assignees": "Assignees",
		"assignYourself": "assign yourself",
		"edit": "edit",
		"addToProject": "add to project",
		"addToMilestone": "add to milestone",
		"projects": "Projects",
		"milestone": "Milestone",
		"today": "today",
		"yesterday": "yesterday",
		"daysAgo": "days ago",
		"weeksAgo": "weeks ago",
		"monthsAgo": "months ago",
		"page": "📄 Page 1",
		"noComments": "No comments yet"
	},
	"repositorySelection": {
		"title": "Select Repository",
		"subtitle": "Choose an existing repository or create a new one",
		"tabs": {
			"recent": "Recent Repositories",
			"existing": "Select Existing Repository",
			"create": "Create New Repository"
		},
		"recent": {
			"title": "Recently Visited Repositories",
			"empty": "No access history",
			"noDescription": "No description",
			"lastAccessed": "Last accessed",
			"select": "Select"
		},
		"existing": {
			"title": "Available Repository List",
			"loading": "Loading repository list...",
			"error": "Failed to load",
			"empty": "No available repositories",
			"retry": "Retry",
			"createdAt": "Created at",
			"select": "Select",
			"noDescription": "No description"
		},
		"history": {
			"title": "Recently Visited Repositories",
			"noHistory": "No history available",
			"lastAccessed": "Last accessed:"
		},
		"urlInput": {
			"title": "Or enter repository address",
			"label": "GitHub Repository URL",
			"placeholder": "https://github.com/owner/repo",
			"help": "Please enter the complete GitHub repository address"
		},
		"create": {
			"title": "Create New Repository",
			"ownerLabel": "Repository Owner",
			"ownerPlaceholder": "Organization name (required)",
			"ownerHelp": "Organization name is required; personal repositories are not supported",
			"nameLabel": "Repository Name",
			"namePlaceholder": "English letters and numbers, max 100 characters",
			"descriptionLabel": "Repository Description",
			"descriptionPlaceholder": "Brief description of the repository, max 350 characters"
		},
		"continue": {
			"button": "Continue",
			"loading": "Processing...",
			"success": "Processing Complete!"
		},
		"syncing": "Syncing files...",
		"errors": {
			"notLoggedIn": "Please log in first",
			"repoExists": "Repository name already exists",
			"noRepoName": "Please enter repository name",
			"repoNameTooLong": "Repository name cannot exceed 100 characters",
			"repoNameInvalid": "Repository name can only contain English letters and numbers",
			"repoNameEmpty": "Repository name cannot be empty",
			"repoDescriptionTooLong": "Repository description cannot exceed 350 characters",
			"ownerNotFound": "The specified user or organization does not exist",
			"cannotCreateForOtherUser": "Cannot create repository under other user accounts",
			"noOrgPermission": "You do not have permission to create repositories in this organization"
		}
	},
	"cla": {
		"title": "Contributor License Agreement",
		"content": "As a contributor to the DIPCP platform, you need to sign a Contributor License Agreement to transfer intellectual property ownership completely to the DIPCF Foundation. The foundation will uniformly manage and be responsible for the maintenance and operation of intellectual property. Please read through before signing the agreement.",
		"realNameLabel": "Please enter your real name",
		"realNamePlaceholder": "Please enter your real name (for legal documents)",
		"agree": "Agree and Sign",
		"disagree": "Disagree",
		"rejected": "User refused to sign CLA agreement",
		"signingRecord": "CLA Signing Record",
		"signer": "Signer",
		"signingTime": "Signing Time",
		"repository": "Repository",
		"agreementContent": "CLA Agreement Content",
		"signingConfirmation": "Signing Confirmation",
		"signingStatement": "I, **{realName}** (GitHub username: {username}), confirm that I have read and agree to all terms of the above Contributor License Agreement.",
		"signerRealName": "Signer Real Name",
		"githubUsername": "GitHub Username",
		"email": "Email",
		"notProvided": "Not provided",
		"autoGenerated": "This file is automatically generated by DIPCP system",
		"errors": {
			"noRealName": "Please enter your real name"
		}
	}
}